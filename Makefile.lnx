#############################################################################
# Makefile for building: QtClasses
# Generated by qmake (2.01a) (Qt 4.8.7) on: Fri Jun 4 12:28:34 2021
# Project:  QtClasses.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile QtClasses.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG
CFLAGS        =  -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      =  -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I.
LINK          = g++
LFLAGS        =
LIBS          = $(SUBLIBS)
AR            = ar cqs
RANLIB        = 
QMAKE         = qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = foo.cpp \
		frooler.cpp \
		squibber.cpp 
OBJECTS       = foo.o \
		frooler.o \
		squibber.o
DIST          = QtClasses.pro
QMAKE_TARGET  = QtClasses
DESTDIR       =
TARGET        = QtClasses

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: QtClasses.pro
	$(QMAKE) -o Makefile QtClasses.pro

qmake:  FORCE
	@$(QMAKE) -o Makefile QtClasses.pro

dist:
	@$(CHK_DIR_EXISTS) .tmp/QtClasses1.0.0 || $(MKDIR) .tmp/QtClasses1.0.0
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QtClasses1.0.0/ && $(COPY_FILE) \
	--parents frooler.h squibber.h .tmp/QtClasses1.0.0/ && $(COPY_FILE) \
	--parents foo.cpp frooler.cpp squibber.cpp \
	.tmp/QtClasses1.0.0/ && (cd `dirname .tmp/QtClasses1.0.0` && $(TAR) \
	QtClasses1.0.0.tar QtClasses1.0.0 && $(COMPRESS) QtClasses1.0.0.tar) && \
	$(MOVE) `dirname .tmp/QtClasses1.0.0`/QtClasses1.0.0.tar.gz . && \
	$(DEL_FILE) -r .tmp/QtClasses1.0.0

clean:compiler_clean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
compiler_clean:

	-$(DEL_FILE) qmake_image_collection.cpp
####### Compile

foo.o: foo.cpp squibber.h \
		frooler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o foo.o foo.cpp

frooler.o: frooler.cpp frooler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o frooler.o frooler.cpp

squibber.o: squibber.cpp squibber.h \
		frooler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o squibber.o squibber.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

